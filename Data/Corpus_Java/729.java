package jetbrains.mps.lang.actions.test.sidetransform;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import junit.framework.Assert;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

@MPSLaunch
public class LeftTransformWithCustomItem_Simple_checkCanBeAncestor_Test extends BaseTransformationTest {
  @Test
  public void test_LeftTransformWithCustomItem_Simple_checkCanBeAncestor() throws Throwable {
    initTest("${mps_home}", "r:3643c33a-b564-4832-938b-79a88b40b6f2(jetbrains.mps.lang.actions.test.sidetransform@tests)");
    runTest("jetbrains.mps.lang.actions.test.sidetransform.LeftTransformWithCustomItem_Simple_checkCanBeAncestor_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("3185679905990189306", "3185679905990189310");
      typeString(" ");
      invokeAction("jetbrains.mps.ide.editor.actions.Complete_Action");
      Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isVisible());
      Assert.assertTrue(getEditorComponent().getNodeSubstituteChooser().isMenuEmpty());
      getEditorComponent().getNodeSubstituteChooser().setVisible(false);
      pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), " ESCAPE"));
    }
  }
}
