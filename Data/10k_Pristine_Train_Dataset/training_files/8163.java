package jetbrains.mps.samples.componentDependencies.editor;

/*Generated by MPS */

import jetbrains.jetpad.projectional.diagram.view.layout.CenterVerticalLayoutView;
import jetbrains.mps.lang.editor.diagram.runtime.jetpad.views.MovableContentView;
import jetbrains.jetpad.cell.TextCell;
import jetbrains.jetpad.values.Color;
import jetbrains.jetpad.cell.toView.CellView;
import jetbrains.jetpad.cell.text.TextEditing;
import jetbrains.jetpad.projectional.view.RectView;
import jetbrains.jetpad.geometry.Vector;
import jetbrains.jetpad.mapper.Mapper;
import jetbrains.jetpad.model.property.Property;

public class BlockView extends CenterVerticalLayoutView implements MovableContentView {
  private TextCell myCell = new TextCell();
  public BlockView() {
    super(false);
    background().set(Color.BLUE);
    CellView cellView = new CellView();
    cellView.background().set(Color.LIGHT_BLUE);
    myCell.addTrait(TextEditing.textEditing());
    cellView.cell.set(myCell);
    children().add(cellView);
    RectView bottomRect = new RectView();
    bottomRect.background().set(Color.GRAY);
    bottomRect.dimension().set(new Vector(100, 30));
    children().add(bottomRect);
    initSynchronizers();
  }
  private void initSynchronizers() {
    new Mapper<BlockView, BlockView>(this, this) {
      @Override
      protected void registerSynchronizers(Mapper.SynchronizersConfiguration configuration) {
        super.registerSynchronizers(configuration);
      }
    }.attachRoot();
  }
  public Property<String> text() {
    return myCell.text();
  }
}
