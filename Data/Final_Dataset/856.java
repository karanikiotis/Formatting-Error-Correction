// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.tfs.workitemtracking.clientservices._03;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.types.AnyContentType;

import ms.tfs.workitemtracking.clientservices._03._AccessControlEntryData;
import ms.tfs.workitemtracking.clientservices._03._AccessControlEntryExtendedData;
import ms.tfs.workitemtracking.clientservices._03._AccessControlListMetadata;
import ms.tfs.workitemtracking.clientservices._03._ArtifactWorkItemIds;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_BulkUpdate;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_BulkUpdateResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_DestroyAttachments;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_DestroyAttachmentsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetChangedWorkItemIds;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetChangedWorkItemIdsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetConstantRecords;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetConstantRecordsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetDestroyedWorkItemIds;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetDestroyedWorkItemIdsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetMetadataEx2;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetMetadataEx2Response;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetReferencingWorkitemUris;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetReferencingWorkitemUrisResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueries;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueriesResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQuery;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueryItemAccessControlList;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueryItemAccessControlListResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueryItems;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueryItemsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetStoredQueryResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItem;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItemIdsForArtifactUris;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItemIdsForArtifactUrisResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItemLinkChanges;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItemLinkChangesResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkItemResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkitemTrackingVersion;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_GetWorkitemTrackingVersionResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_PageWorkitemsByIdRevs;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_PageWorkitemsByIdRevsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_PageWorkitemsByIds;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_PageWorkitemsByIdsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_QueryWorkitemCount;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_QueryWorkitemCountResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_QueryWorkitems;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_QueryWorkitemsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_RequestCancel;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_RequestCancelResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_StampWorkitemCache;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_StampWorkitemCacheResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncAccessControlLists;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncAccessControlListsResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncBisGroupsAndUsers;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncBisGroupsAndUsersResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncExternalStructures;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_SyncExternalStructuresResponse;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_Update;
import ms.tfs.workitemtracking.clientservices._03._ClientService5Soap_UpdateResponse;
import ms.tfs.workitemtracking.clientservices._03._ConstantRecord;
import ms.tfs.workitemtracking.clientservices._03._ConstantRecordSearchFactor;
import ms.tfs.workitemtracking.clientservices._03._ExtendedAccessControlListData;
import ms.tfs.workitemtracking.clientservices._03._IdRevisionPair;
import ms.tfs.workitemtracking.clientservices._03._IdentityDescriptorData;
import ms.tfs.workitemtracking.clientservices._03._MetadataTableHaveEntry;
import ms.tfs.workitemtracking.clientservices._03._QuerySortOrderEntry;
import ms.tfs.workitemtracking.clientservices._03._RequiredPermissions;
import ms.tfs.workitemtracking.clientservices._03._WorkItemId;
import ms.tfs.workitemtracking.clientservices._03._WorkItemLinkChange;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.String;

import java.net.URI;

import java.util.Calendar;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/ClientServices/03}ClientService5SoapService
 */
public class _ClientService5SoapService
    extends SOAP11Service
    implements _ClientService5Soap
{
    private static final QName PORT_QNAME = new QName(
                "http://schemas.microsoft.com/TeamFoundation/2005/06/WorkItemTracking/ClientServices/03",
                "ClientService5SoapService");
    private static final String ENDPOINT_PATH = "/tfs/DefaultCollection/WorkItemTracking/v5.0/ClientService.asmx";

    public _ClientService5SoapService(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _ClientService5SoapService(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _ClientService5SoapService.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _ClientService5SoapService.ENDPOINT_PATH;
    }

    public _ConstantRecord[] getConstantRecords(
        final String[] searchValues,
        final _ConstantRecordSearchFactor searchFactor)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetConstantRecords requestData = new _ClientService5Soap_GetConstantRecords(searchValues,
                searchFactor);

        final SOAPRequest request = createSOAPRequest(
                "GetConstantRecords",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetConstantRecords");
                    }
                });

        final _ClientService5Soap_GetConstantRecordsResponse responseData = new _ClientService5Soap_GetConstantRecordsResponse();

        executeSOAPRequest(
            request,
            "GetConstantRecordsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetConstantRecordsResult();
    }

    public void destroyAttachments(final int[] workItemIds)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_DestroyAttachments requestData = new _ClientService5Soap_DestroyAttachments(workItemIds);

        final SOAPRequest request = createSOAPRequest(
                "DestroyAttachments",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DestroyAttachments");
                    }
                });

        final _ClientService5Soap_DestroyAttachmentsResponse responseData = new _ClientService5Soap_DestroyAttachmentsResponse();

        executeSOAPRequest(
            request,
            "DestroyAttachmentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _ArtifactWorkItemIds[] getWorkItemIdsForArtifactUris(
        final String[] artifactUris,
        final Calendar asOfDate)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetWorkItemIdsForArtifactUris requestData = new _ClientService5Soap_GetWorkItemIdsForArtifactUris(
                    artifactUris,
                    asOfDate);

        final SOAPRequest request = createSOAPRequest(
                "GetWorkItemIdsForArtifactUris",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetWorkItemIdsForArtifactUris");
                    }
                });

        final _ClientService5Soap_GetWorkItemIdsForArtifactUrisResponse responseData = new _ClientService5Soap_GetWorkItemIdsForArtifactUrisResponse();

        executeSOAPRequest(
            request,
            "GetWorkItemIdsForArtifactUrisResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getArtifactLinks();
    }

    public _WorkItemId[] getDestroyedWorkItemIds(final long rowVersion)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetDestroyedWorkItemIds requestData = new _ClientService5Soap_GetDestroyedWorkItemIds(
                    rowVersion);

        final SOAPRequest request = createSOAPRequest(
                "GetDestroyedWorkItemIds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetDestroyedWorkItemIds");
                    }
                });

        final _ClientService5Soap_GetDestroyedWorkItemIdsResponse responseData = new _ClientService5Soap_GetDestroyedWorkItemIdsResponse();

        executeSOAPRequest(
            request,
            "GetDestroyedWorkItemIdsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetDestroyedWorkItemIdsResult();
    }

    public _WorkItemId[] getChangedWorkItemIds(final long rowVersion)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetChangedWorkItemIds requestData = new _ClientService5Soap_GetChangedWorkItemIds(
                    rowVersion);

        final SOAPRequest request = createSOAPRequest(
                "GetChangedWorkItemIds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetChangedWorkItemIds");
                    }
                });

        final _ClientService5Soap_GetChangedWorkItemIdsResponse responseData = new _ClientService5Soap_GetChangedWorkItemIdsResponse();

        executeSOAPRequest(
            request,
            "GetChangedWorkItemIdsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetChangedWorkItemIdsResult();
    }

    public _WorkItemLinkChange[] getWorkItemLinkChanges(final long rowVersion)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetWorkItemLinkChanges requestData = new _ClientService5Soap_GetWorkItemLinkChanges(
                    rowVersion);

        final SOAPRequest request = createSOAPRequest(
                "GetWorkItemLinkChanges",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetWorkItemLinkChanges");
                    }
                });

        final _ClientService5Soap_GetWorkItemLinkChangesResponse responseData = new _ClientService5Soap_GetWorkItemLinkChangesResponse();

        executeSOAPRequest(
            request,
            "GetWorkItemLinkChangesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetWorkItemLinkChangesResult();
    }

    public _ExtendedAccessControlListData getStoredQueryItemAccessControlList(
        final String queryItemId,
        final boolean getMetadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetStoredQueryItemAccessControlList requestData = new _ClientService5Soap_GetStoredQueryItemAccessControlList(
                    queryItemId,
                    getMetadata);

        final SOAPRequest request = createSOAPRequest(
                "GetStoredQueryItemAccessControlList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetStoredQueryItemAccessControlList");
                    }
                });

        final _ClientService5Soap_GetStoredQueryItemAccessControlListResponse responseData = new _ClientService5Soap_GetStoredQueryItemAccessControlListResponse();

        executeSOAPRequest(
            request,
            "GetStoredQueryItemAccessControlListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetStoredQueryItemAccessControlListResult();
    }

    public AnyContentType getStoredQueryItems(
        final long rowVersion,
        final int projectId,
        final AnyContentType _out_queryItemsPayload)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetStoredQueryItems requestData = new _ClientService5Soap_GetStoredQueryItems(rowVersion,
                projectId);

        final SOAPRequest request = createSOAPRequest(
                "GetStoredQueryItems",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetStoredQueryItems");
                    }
                });

        final _ClientService5Soap_GetStoredQueryItemsResponse responseData = new _ClientService5Soap_GetStoredQueryItemsResponse();

        responseData.setQueryItemsPayload(_out_queryItemsPayload);

        executeSOAPRequest(
            request,
            "GetStoredQueryItemsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryItemsPayload();
    }

    public String getWorkitemTrackingVersion()
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetWorkitemTrackingVersion requestData = new _ClientService5Soap_GetWorkitemTrackingVersion();

        final SOAPRequest request = createSOAPRequest(
                "GetWorkitemTrackingVersion",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetWorkitemTrackingVersion");
                    }
                });

        final _ClientService5Soap_GetWorkitemTrackingVersionResponse responseData = new _ClientService5Soap_GetWorkitemTrackingVersionResponse();

        executeSOAPRequest(
            request,
            "GetWorkitemTrackingVersionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetWorkitemTrackingVersionResult();
    }

    public void stampWorkitemCache()
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_StampWorkitemCache requestData = new _ClientService5Soap_StampWorkitemCache();

        final SOAPRequest request = createSOAPRequest(
                "StampWorkitemCache",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "StampWorkitemCache");
                    }
                });

        final _ClientService5Soap_StampWorkitemCacheResponse responseData = new _ClientService5Soap_StampWorkitemCacheResponse();

        executeSOAPRequest(
            request,
            "StampWorkitemCacheResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public String[] getReferencingWorkitemUris(final String artifactUri)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetReferencingWorkitemUris requestData = new _ClientService5Soap_GetReferencingWorkitemUris(
                    artifactUri);

        final SOAPRequest request = createSOAPRequest(
                "GetReferencingWorkitemUris",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetReferencingWorkitemUris");
                    }
                });

        final _ClientService5Soap_GetReferencingWorkitemUrisResponse responseData = new _ClientService5Soap_GetReferencingWorkitemUrisResponse();

        executeSOAPRequest(
            request,
            "GetReferencingWorkitemUrisResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetReferencingWorkitemUrisResult();
    }

    public _ClientService5Soap_GetWorkItemResponse getWorkItem(
        final int workItemId,
        final int revisionId,
        final int minimumRevisionId,
        final Calendar asOfDate,
        final boolean useMaster,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_workItem,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetWorkItem requestData = new _ClientService5Soap_GetWorkItem(workItemId, revisionId,
                minimumRevisionId, asOfDate, useMaster, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "GetWorkItem",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetWorkItem");
                    }
                });

        final _ClientService5Soap_GetWorkItemResponse responseData = new _ClientService5Soap_GetWorkItemResponse();

        responseData.setWorkItem(_out_workItem);
        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "GetWorkItemResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_QueryWorkitemsResponse queryWorkitems(
        final AnyContentType psQuery,
        final _QuerySortOrderEntry[] sort,
        final boolean useMaster,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_resultIds,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_QueryWorkitems requestData = new _ClientService5Soap_QueryWorkitems(psQuery, sort,
                useMaster, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "QueryWorkitems",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryWorkitems");
                    }
                });

        final _ClientService5Soap_QueryWorkitemsResponse responseData = new _ClientService5Soap_QueryWorkitemsResponse();

        responseData.setResultIds(_out_resultIds);
        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "QueryWorkitemsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_PageWorkitemsByIdsResponse pageWorkitemsByIds(
        final int[] ids,
        final String[] columns,
        final int[] longTextColumns,
        final Calendar asOfDate,
        final boolean useMaster,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_items,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_PageWorkitemsByIds requestData = new _ClientService5Soap_PageWorkitemsByIds(ids,
                columns, longTextColumns, asOfDate, useMaster, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "PageWorkitemsByIds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "PageWorkitemsByIds");
                    }
                });

        final _ClientService5Soap_PageWorkitemsByIdsResponse responseData = new _ClientService5Soap_PageWorkitemsByIdsResponse();

        responseData.setItems(_out_items);
        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "PageWorkitemsByIdsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_PageWorkitemsByIdRevsResponse pageWorkitemsByIdRevs(
        final _IdRevisionPair[] pairs,
        final String[] columns,
        final int[] longTextColumns,
        final Calendar asOfDate,
        final boolean useMaster,
        final AnyContentType _out_items)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_PageWorkitemsByIdRevs requestData = new _ClientService5Soap_PageWorkitemsByIdRevs(pairs,
                columns,
                longTextColumns,
                asOfDate,
                useMaster);

        final SOAPRequest request = createSOAPRequest(
                "PageWorkitemsByIdRevs",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "PageWorkitemsByIdRevs");
                    }
                });

        final _ClientService5Soap_PageWorkitemsByIdRevsResponse responseData = new _ClientService5Soap_PageWorkitemsByIdRevsResponse();

        responseData.setItems(_out_items);

        executeSOAPRequest(
            request,
            "PageWorkitemsByIdRevsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_QueryWorkitemCountResponse queryWorkitemCount(
        final AnyContentType psQuery,
        final boolean useMaster,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_QueryWorkitemCount requestData = new _ClientService5Soap_QueryWorkitemCount(psQuery,
                useMaster, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "QueryWorkitemCount",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryWorkitemCount");
                    }
                });

        final _ClientService5Soap_QueryWorkitemCountResponse responseData = new _ClientService5Soap_QueryWorkitemCountResponse();

        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "QueryWorkitemCountResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_GetMetadataEx2Response getMetadataEx2(
        final _MetadataTableHaveEntry[] metadataHave,
        final boolean useMaster,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetMetadataEx2 requestData = new _ClientService5Soap_GetMetadataEx2(metadataHave,
                useMaster);

        final SOAPRequest request = createSOAPRequest(
                "GetMetadataEx2",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetMetadataEx2");
                    }
                });

        final _ClientService5Soap_GetMetadataEx2Response responseData = new _ClientService5Soap_GetMetadataEx2Response();

        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "GetMetadataEx2Response",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_UpdateResponse update(
        final AnyContentType _package,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_result,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_Update requestData = new _ClientService5Soap_Update(_package, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "Update",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "Update");
                    }
                });

        final _ClientService5Soap_UpdateResponse responseData = new _ClientService5Soap_UpdateResponse();

        responseData.setResult(_out_result);
        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "UpdateResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public _ClientService5Soap_BulkUpdateResponse bulkUpdate(
        final AnyContentType _package,
        final _MetadataTableHaveEntry[] metadataHave,
        final AnyContentType _out_result,
        final AnyContentType _out_metadata)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_BulkUpdate requestData = new _ClientService5Soap_BulkUpdate(_package, metadataHave);

        final SOAPRequest request = createSOAPRequest(
                "BulkUpdate",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "BulkUpdate");
                    }
                });

        final _ClientService5Soap_BulkUpdateResponse responseData = new _ClientService5Soap_BulkUpdateResponse();

        responseData.setResult(_out_result);
        responseData.setMetadata(_out_metadata);

        executeSOAPRequest(
            request,
            "BulkUpdateResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData;
    }

    public AnyContentType getStoredQuery(
        final String queryId,
        final AnyContentType _out_queryPayload)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetStoredQuery requestData = new _ClientService5Soap_GetStoredQuery(queryId);

        final SOAPRequest request = createSOAPRequest(
                "GetStoredQuery",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetStoredQuery");
                    }
                });

        final _ClientService5Soap_GetStoredQueryResponse responseData = new _ClientService5Soap_GetStoredQueryResponse();

        responseData.setQueryPayload(_out_queryPayload);

        executeSOAPRequest(
            request,
            "GetStoredQueryResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryPayload();
    }

    public AnyContentType getStoredQueries(
        final long rowVersion,
        final int projectId,
        final AnyContentType _out_queriesPayload)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_GetStoredQueries requestData = new _ClientService5Soap_GetStoredQueries(rowVersion,
                projectId);

        final SOAPRequest request = createSOAPRequest(
                "GetStoredQueries",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetStoredQueries");
                    }
                });

        final _ClientService5Soap_GetStoredQueriesResponse responseData = new _ClientService5Soap_GetStoredQueriesResponse();

        responseData.setQueriesPayload(_out_queriesPayload);

        executeSOAPRequest(
            request,
            "GetStoredQueriesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueriesPayload();
    }

    public void syncExternalStructures(final String projectURI)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_SyncExternalStructures requestData = new _ClientService5Soap_SyncExternalStructures(
                    projectURI);

        final SOAPRequest request = createSOAPRequest(
                "SyncExternalStructures",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "SyncExternalStructures");
                    }
                });

        final _ClientService5Soap_SyncExternalStructuresResponse responseData = new _ClientService5Soap_SyncExternalStructuresResponse();

        executeSOAPRequest(
            request,
            "SyncExternalStructuresResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void syncAccessControlLists(final String projectURI)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_SyncAccessControlLists requestData = new _ClientService5Soap_SyncAccessControlLists(
                    projectURI);

        final SOAPRequest request = createSOAPRequest(
                "SyncAccessControlLists",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "SyncAccessControlLists");
                    }
                });

        final _ClientService5Soap_SyncAccessControlListsResponse responseData = new _ClientService5Soap_SyncAccessControlListsResponse();

        executeSOAPRequest(
            request,
            "SyncAccessControlListsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void syncBisGroupsAndUsers(final String projectUri)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_SyncBisGroupsAndUsers requestData = new _ClientService5Soap_SyncBisGroupsAndUsers(
                    projectUri);

        final SOAPRequest request = createSOAPRequest(
                "SyncBisGroupsAndUsers",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "SyncBisGroupsAndUsers");
                    }
                });

        final _ClientService5Soap_SyncBisGroupsAndUsersResponse responseData = new _ClientService5Soap_SyncBisGroupsAndUsersResponse();

        executeSOAPRequest(
            request,
            "SyncBisGroupsAndUsersResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void requestCancel(final String requestIdToCancel)
        throws TransportException, SOAPFault
    {
        final _ClientService5Soap_RequestCancel requestData = new _ClientService5Soap_RequestCancel(requestIdToCancel);

        final SOAPRequest request = createSOAPRequest(
                "RequestCancel",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "RequestCancel");
                    }
                });

        final _ClientService5Soap_RequestCancelResponse responseData = new _ClientService5Soap_RequestCancelResponse();

        executeSOAPRequest(
            request,
            "RequestCancelResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }
}
