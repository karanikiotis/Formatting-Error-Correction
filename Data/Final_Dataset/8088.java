// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceInterface.vm template.
 */
package ms.tfs.services.classification._03;

import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.types.AnyContentType;

import ms.tfs.services.classification._03._ClassificationSoap_CreateNode;
import ms.tfs.services.classification._03._ClassificationSoap_CreateNodeResponse;
import ms.tfs.services.classification._03._ClassificationSoap_CreateProject;
import ms.tfs.services.classification._03._ClassificationSoap_CreateProjectResponse;
import ms.tfs.services.classification._03._ClassificationSoap_DeleteBranches;
import ms.tfs.services.classification._03._ClassificationSoap_DeleteBranchesResponse;
import ms.tfs.services.classification._03._ClassificationSoap_DeleteProject;
import ms.tfs.services.classification._03._ClassificationSoap_DeleteProjectResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetChangedNodes;
import ms.tfs.services.classification._03._ClassificationSoap_GetChangedNodesResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetDeletedNodesXml;
import ms.tfs.services.classification._03._ClassificationSoap_GetDeletedNodesXmlResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetNode;
import ms.tfs.services.classification._03._ClassificationSoap_GetNodeFromPath;
import ms.tfs.services.classification._03._ClassificationSoap_GetNodeFromPathResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetNodeResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetNodesXml;
import ms.tfs.services.classification._03._ClassificationSoap_GetNodesXmlResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetProject;
import ms.tfs.services.classification._03._ClassificationSoap_GetProjectFromName;
import ms.tfs.services.classification._03._ClassificationSoap_GetProjectFromNameResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetProjectProperties;
import ms.tfs.services.classification._03._ClassificationSoap_GetProjectPropertiesResponse;
import ms.tfs.services.classification._03._ClassificationSoap_GetProjectResponse;
import ms.tfs.services.classification._03._ClassificationSoap_ListAllProjects;
import ms.tfs.services.classification._03._ClassificationSoap_ListAllProjectsResponse;
import ms.tfs.services.classification._03._ClassificationSoap_ListProjects;
import ms.tfs.services.classification._03._ClassificationSoap_ListProjectsResponse;
import ms.tfs.services.classification._03._ClassificationSoap_ListStructures;
import ms.tfs.services.classification._03._ClassificationSoap_ListStructuresResponse;
import ms.tfs.services.classification._03._ClassificationSoap_MoveBranch;
import ms.tfs.services.classification._03._ClassificationSoap_MoveBranchResponse;
import ms.tfs.services.classification._03._ClassificationSoap_RenameNode;
import ms.tfs.services.classification._03._ClassificationSoap_RenameNodeResponse;
import ms.tfs.services.classification._03._ClassificationSoap_ReorderNode;
import ms.tfs.services.classification._03._ClassificationSoap_ReorderNodeResponse;
import ms.tfs.services.classification._03._ClassificationSoap_UpdateProjectProperties;
import ms.tfs.services.classification._03._ClassificationSoap_UpdateProjectPropertiesResponse;
import ms.tfs.services.classification._03._NodeInfo;
import ms.tfs.services.classification._03._ProjectInfo;
import ms.tfs.services.classification._03._ProjectProperty;
import ms.tfs.services.classification._03._ProjectState;
import ms.tfs.services.classification._03._Property;

import java.lang.String;

import java.util.Calendar;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Classification/03}ClassificationSoap
 */
public interface _ClassificationSoap
{
    public _ProjectInfo createProject(
        final String projectName,
        final AnyContentType structure)
        throws TransportException, SOAPFault;

    public void deleteProject(final String projectUri)
        throws TransportException, SOAPFault;

    public _ClassificationSoap_GetProjectPropertiesResponse getProjectProperties(final String projectUri)
        throws TransportException, SOAPFault;

    public void updateProjectProperties(
        final String projectUri,
        final String state,
        final _ProjectProperty[] properties)
        throws TransportException, SOAPFault;

    public _ProjectInfo getProject(final String projectUri)
        throws TransportException, SOAPFault;

    public _ProjectInfo getProjectFromName(final String projectName)
        throws TransportException, SOAPFault;

    public _ProjectInfo[] listProjects()
        throws TransportException, SOAPFault;

    public _ProjectInfo[] listAllProjects()
        throws TransportException, SOAPFault;

    public _NodeInfo[] listStructures(final String projectUri)
        throws TransportException, SOAPFault;

    public AnyContentType getNodesXml(
        final String[] nodeUris,
        final boolean childNodes,
        final AnyContentType _out_getNodesXmlResult)
        throws TransportException, SOAPFault;

    public String createNode(
        final String nodeName,
        final String parentNodeUri)
        throws TransportException, SOAPFault;

    public void renameNode(
        final String nodeUri,
        final String newNodeName)
        throws TransportException, SOAPFault;

    public void moveBranch(
        final String nodeUri,
        final String newParentNodeUri)
        throws TransportException, SOAPFault;

    public void reorderNode(
        final String nodeUri,
        final int moveBy)
        throws TransportException, SOAPFault;

    public void deleteBranches(
        final String[] nodeUris,
        final String reclassifyUri)
        throws TransportException, SOAPFault;

    public AnyContentType getDeletedNodesXml(
        final String projectUri,
        final Calendar since,
        final AnyContentType _out_getDeletedNodesXmlResult)
        throws TransportException, SOAPFault;

    public _NodeInfo getNode(final String nodeUri)
        throws TransportException, SOAPFault;

    public _NodeInfo getNodeFromPath(final String nodePath)
        throws TransportException, SOAPFault;

    public String getChangedNodes(final int firstSequenceId)
        throws TransportException, SOAPFault;
}
