// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.wss;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.types.AnyContentType;

import ms.wss._ListsSoap_AddAttachment;
import ms.wss._ListsSoap_AddAttachmentResponse;
import ms.wss._ListsSoap_AddDiscussionBoardItem;
import ms.wss._ListsSoap_AddDiscussionBoardItemResponse;
import ms.wss._ListsSoap_AddList;
import ms.wss._ListsSoap_AddListFromFeature;
import ms.wss._ListsSoap_AddListFromFeatureResponse;
import ms.wss._ListsSoap_AddListResponse;
import ms.wss._ListsSoap_AddWikiPage;
import ms.wss._ListsSoap_AddWikiPageResponse;
import ms.wss._ListsSoap_ApplyContentTypeToList;
import ms.wss._ListsSoap_ApplyContentTypeToListResponse;
import ms.wss._ListsSoap_CheckInFile;
import ms.wss._ListsSoap_CheckInFileResponse;
import ms.wss._ListsSoap_CheckOutFile;
import ms.wss._ListsSoap_CheckOutFileResponse;
import ms.wss._ListsSoap_CreateContentType;
import ms.wss._ListsSoap_CreateContentTypeResponse;
import ms.wss._ListsSoap_DeleteAttachment;
import ms.wss._ListsSoap_DeleteAttachmentResponse;
import ms.wss._ListsSoap_DeleteContentType;
import ms.wss._ListsSoap_DeleteContentTypeResponse;
import ms.wss._ListsSoap_DeleteContentTypeXmlDocument;
import ms.wss._ListsSoap_DeleteContentTypeXmlDocumentResponse;
import ms.wss._ListsSoap_DeleteList;
import ms.wss._ListsSoap_DeleteListResponse;
import ms.wss._ListsSoap_GetAttachmentCollection;
import ms.wss._ListsSoap_GetAttachmentCollectionResponse;
import ms.wss._ListsSoap_GetList;
import ms.wss._ListsSoap_GetListAndView;
import ms.wss._ListsSoap_GetListAndViewResponse;
import ms.wss._ListsSoap_GetListCollection;
import ms.wss._ListsSoap_GetListCollectionResponse;
import ms.wss._ListsSoap_GetListContentType;
import ms.wss._ListsSoap_GetListContentTypeResponse;
import ms.wss._ListsSoap_GetListContentTypes;
import ms.wss._ListsSoap_GetListContentTypesAndProperties;
import ms.wss._ListsSoap_GetListContentTypesAndPropertiesResponse;
import ms.wss._ListsSoap_GetListContentTypesResponse;
import ms.wss._ListsSoap_GetListItemChanges;
import ms.wss._ListsSoap_GetListItemChangesResponse;
import ms.wss._ListsSoap_GetListItemChangesSinceToken;
import ms.wss._ListsSoap_GetListItemChangesSinceTokenResponse;
import ms.wss._ListsSoap_GetListItemChangesWithKnowledge;
import ms.wss._ListsSoap_GetListItemChangesWithKnowledgeResponse;
import ms.wss._ListsSoap_GetListItems;
import ms.wss._ListsSoap_GetListItemsResponse;
import ms.wss._ListsSoap_GetListResponse;
import ms.wss._ListsSoap_GetVersionCollection;
import ms.wss._ListsSoap_GetVersionCollectionResponse;
import ms.wss._ListsSoap_UndoCheckOut;
import ms.wss._ListsSoap_UndoCheckOutResponse;
import ms.wss._ListsSoap_UpdateContentType;
import ms.wss._ListsSoap_UpdateContentTypeResponse;
import ms.wss._ListsSoap_UpdateContentTypeXmlDocument;
import ms.wss._ListsSoap_UpdateContentTypeXmlDocumentResponse;
import ms.wss._ListsSoap_UpdateContentTypesXmlDocument;
import ms.wss._ListsSoap_UpdateContentTypesXmlDocumentResponse;
import ms.wss._ListsSoap_UpdateList;
import ms.wss._ListsSoap_UpdateListItems;
import ms.wss._ListsSoap_UpdateListItemsResponse;
import ms.wss._ListsSoap_UpdateListItemsWithKnowledge;
import ms.wss._ListsSoap_UpdateListItemsWithKnowledgeResponse;
import ms.wss._ListsSoap_UpdateListResponse;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.String;

import java.net.URI;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/sharepoint/soap/}ListsSoap12Service
 */
public class _ListsSoap12Service
    extends SOAP12Service
    implements _ListsSoap
{
    private static final QName PORT_QNAME = new QName("http://schemas.microsoft.com/sharepoint/soap/",
            "ListsSoap12Service");
    private static final String ENDPOINT_PATH = "/sites/TEE/_vti_bin/lists.asmx";

    public _ListsSoap12Service(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _ListsSoap12Service(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _ListsSoap12Service.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _ListsSoap12Service.ENDPOINT_PATH;
    }

    public AnyContentType getList(
        final String listName,
        final AnyContentType _out_getListResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetList requestData = new _ListsSoap_GetList(listName);

        final SOAPRequest request = createSOAPRequest(
                "GetList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetList");
                    }
                });

        final _ListsSoap_GetListResponse responseData = new _ListsSoap_GetListResponse();

        responseData.setGetListResult(_out_getListResult);

        executeSOAPRequest(
            request,
            "GetListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListResult();
    }

    public AnyContentType getListAndView(
        final String listName,
        final String viewName,
        final AnyContentType _out_getListAndViewResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListAndView requestData = new _ListsSoap_GetListAndView(listName, viewName);

        final SOAPRequest request = createSOAPRequest(
                "GetListAndView",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListAndView");
                    }
                });

        final _ListsSoap_GetListAndViewResponse responseData = new _ListsSoap_GetListAndViewResponse();

        responseData.setGetListAndViewResult(_out_getListAndViewResult);

        executeSOAPRequest(
            request,
            "GetListAndViewResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListAndViewResult();
    }

    public void deleteList(final String listName)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_DeleteList requestData = new _ListsSoap_DeleteList(listName);

        final SOAPRequest request = createSOAPRequest(
                "DeleteList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteList");
                    }
                });

        final _ListsSoap_DeleteListResponse responseData = new _ListsSoap_DeleteListResponse();

        executeSOAPRequest(
            request,
            "DeleteListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public AnyContentType addList(
        final String listName,
        final String description,
        final int templateID,
        final AnyContentType _out_addListResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_AddList requestData = new _ListsSoap_AddList(listName, description, templateID);

        final SOAPRequest request = createSOAPRequest(
                "AddList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddList");
                    }
                });

        final _ListsSoap_AddListResponse responseData = new _ListsSoap_AddListResponse();

        responseData.setAddListResult(_out_addListResult);

        executeSOAPRequest(
            request,
            "AddListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddListResult();
    }

    public AnyContentType addListFromFeature(
        final String listName,
        final String description,
        final String featureID,
        final int templateID,
        final AnyContentType _out_addListFromFeatureResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_AddListFromFeature requestData = new _ListsSoap_AddListFromFeature(listName, description,
                featureID, templateID);

        final SOAPRequest request = createSOAPRequest(
                "AddListFromFeature",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddListFromFeature");
                    }
                });

        final _ListsSoap_AddListFromFeatureResponse responseData = new _ListsSoap_AddListFromFeatureResponse();

        responseData.setAddListFromFeatureResult(_out_addListFromFeatureResult);

        executeSOAPRequest(
            request,
            "AddListFromFeatureResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddListFromFeatureResult();
    }

    public AnyContentType updateList(
        final String listName,
        final AnyContentType listProperties,
        final AnyContentType newFields,
        final AnyContentType updateFields,
        final AnyContentType deleteFields,
        final String listVersion,
        final AnyContentType _out_updateListResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateList requestData = new _ListsSoap_UpdateList(listName, listProperties, newFields,
                updateFields, deleteFields, listVersion);

        final SOAPRequest request = createSOAPRequest(
                "UpdateList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateList");
                    }
                });

        final _ListsSoap_UpdateListResponse responseData = new _ListsSoap_UpdateListResponse();

        responseData.setUpdateListResult(_out_updateListResult);

        executeSOAPRequest(
            request,
            "UpdateListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateListResult();
    }

    public AnyContentType getListCollection(final AnyContentType _out_getListCollectionResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListCollection requestData = new _ListsSoap_GetListCollection();

        final SOAPRequest request = createSOAPRequest(
                "GetListCollection",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListCollection");
                    }
                });

        final _ListsSoap_GetListCollectionResponse responseData = new _ListsSoap_GetListCollectionResponse();

        responseData.setGetListCollectionResult(_out_getListCollectionResult);

        executeSOAPRequest(
            request,
            "GetListCollectionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListCollectionResult();
    }

    public AnyContentType getListItems(
        final String listName,
        final String viewName,
        final AnyContentType query,
        final AnyContentType viewFields,
        final String rowLimit,
        final AnyContentType queryOptions,
        final String webID,
        final AnyContentType _out_getListItemsResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListItems requestData = new _ListsSoap_GetListItems(listName, viewName, query, viewFields,
                rowLimit, queryOptions, webID);

        final SOAPRequest request = createSOAPRequest(
                "GetListItems",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListItems");
                    }
                });

        final _ListsSoap_GetListItemsResponse responseData = new _ListsSoap_GetListItemsResponse();

        responseData.setGetListItemsResult(_out_getListItemsResult);

        executeSOAPRequest(
            request,
            "GetListItemsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListItemsResult();
    }

    public AnyContentType getListItemChanges(
        final String listName,
        final AnyContentType viewFields,
        final String since,
        final AnyContentType contains,
        final AnyContentType _out_getListItemChangesResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListItemChanges requestData = new _ListsSoap_GetListItemChanges(listName, viewFields,
                since, contains);

        final SOAPRequest request = createSOAPRequest(
                "GetListItemChanges",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListItemChanges");
                    }
                });

        final _ListsSoap_GetListItemChangesResponse responseData = new _ListsSoap_GetListItemChangesResponse();

        responseData.setGetListItemChangesResult(_out_getListItemChangesResult);

        executeSOAPRequest(
            request,
            "GetListItemChangesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListItemChangesResult();
    }

    public AnyContentType getListItemChangesWithKnowledge(
        final String listName,
        final String viewName,
        final AnyContentType query,
        final AnyContentType viewFields,
        final String rowLimit,
        final AnyContentType queryOptions,
        final String syncScope,
        final AnyContentType knowledge,
        final AnyContentType contains,
        final AnyContentType _out_getListItemChangesWithKnowledgeResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListItemChangesWithKnowledge requestData = new _ListsSoap_GetListItemChangesWithKnowledge(
                    listName,
                    viewName,
                    query,
                    viewFields,
                    rowLimit,
                    queryOptions,
                    syncScope,
                    knowledge,
                    contains);

        final SOAPRequest request = createSOAPRequest(
                "GetListItemChangesWithKnowledge",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListItemChangesWithKnowledge");
                    }
                });

        final _ListsSoap_GetListItemChangesWithKnowledgeResponse responseData = new _ListsSoap_GetListItemChangesWithKnowledgeResponse();

        responseData.setGetListItemChangesWithKnowledgeResult(_out_getListItemChangesWithKnowledgeResult);

        executeSOAPRequest(
            request,
            "GetListItemChangesWithKnowledgeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListItemChangesWithKnowledgeResult();
    }

    public AnyContentType getListItemChangesSinceToken(
        final String listName,
        final String viewName,
        final AnyContentType query,
        final AnyContentType viewFields,
        final String rowLimit,
        final AnyContentType queryOptions,
        final String changeToken,
        final AnyContentType contains,
        final AnyContentType _out_getListItemChangesSinceTokenResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListItemChangesSinceToken requestData = new _ListsSoap_GetListItemChangesSinceToken(listName,
                viewName,
                query,
                viewFields,
                rowLimit,
                queryOptions,
                changeToken,
                contains);

        final SOAPRequest request = createSOAPRequest(
                "GetListItemChangesSinceToken",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListItemChangesSinceToken");
                    }
                });

        final _ListsSoap_GetListItemChangesSinceTokenResponse responseData = new _ListsSoap_GetListItemChangesSinceTokenResponse();

        responseData.setGetListItemChangesSinceTokenResult(_out_getListItemChangesSinceTokenResult);

        executeSOAPRequest(
            request,
            "GetListItemChangesSinceTokenResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListItemChangesSinceTokenResult();
    }

    public AnyContentType updateListItems(
        final String listName,
        final AnyContentType updates,
        final AnyContentType _out_updateListItemsResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateListItems requestData = new _ListsSoap_UpdateListItems(listName, updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateListItems",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateListItems");
                    }
                });

        final _ListsSoap_UpdateListItemsResponse responseData = new _ListsSoap_UpdateListItemsResponse();

        responseData.setUpdateListItemsResult(_out_updateListItemsResult);

        executeSOAPRequest(
            request,
            "UpdateListItemsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateListItemsResult();
    }

    public AnyContentType updateListItemsWithKnowledge(
        final String listName,
        final AnyContentType updates,
        final String syncScope,
        final AnyContentType knowledge,
        final AnyContentType _out_updateListItemsWithKnowledgeResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateListItemsWithKnowledge requestData = new _ListsSoap_UpdateListItemsWithKnowledge(listName,
                updates,
                syncScope,
                knowledge);

        final SOAPRequest request = createSOAPRequest(
                "UpdateListItemsWithKnowledge",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateListItemsWithKnowledge");
                    }
                });

        final _ListsSoap_UpdateListItemsWithKnowledgeResponse responseData = new _ListsSoap_UpdateListItemsWithKnowledgeResponse();

        responseData.setUpdateListItemsWithKnowledgeResult(_out_updateListItemsWithKnowledgeResult);

        executeSOAPRequest(
            request,
            "UpdateListItemsWithKnowledgeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateListItemsWithKnowledgeResult();
    }

    public AnyContentType addDiscussionBoardItem(
        final String listName,
        final byte[] message,
        final AnyContentType _out_addDiscussionBoardItemResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_AddDiscussionBoardItem requestData = new _ListsSoap_AddDiscussionBoardItem(listName, message);

        final SOAPRequest request = createSOAPRequest(
                "AddDiscussionBoardItem",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddDiscussionBoardItem");
                    }
                });

        final _ListsSoap_AddDiscussionBoardItemResponse responseData = new _ListsSoap_AddDiscussionBoardItemResponse();

        responseData.setAddDiscussionBoardItemResult(_out_addDiscussionBoardItemResult);

        executeSOAPRequest(
            request,
            "AddDiscussionBoardItemResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddDiscussionBoardItemResult();
    }

    public AnyContentType addWikiPage(
        final String strListName,
        final String listRelPageUrl,
        final String wikiContent,
        final AnyContentType _out_addWikiPageResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_AddWikiPage requestData = new _ListsSoap_AddWikiPage(strListName, listRelPageUrl, wikiContent);

        final SOAPRequest request = createSOAPRequest(
                "AddWikiPage",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddWikiPage");
                    }
                });

        final _ListsSoap_AddWikiPageResponse responseData = new _ListsSoap_AddWikiPageResponse();

        responseData.setAddWikiPageResult(_out_addWikiPageResult);

        executeSOAPRequest(
            request,
            "AddWikiPageResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddWikiPageResult();
    }

    public AnyContentType getVersionCollection(
        final String strlistID,
        final String strlistItemID,
        final String strFieldName,
        final AnyContentType _out_getVersionCollectionResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetVersionCollection requestData = new _ListsSoap_GetVersionCollection(strlistID,
                strlistItemID, strFieldName);

        final SOAPRequest request = createSOAPRequest(
                "GetVersionCollection",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetVersionCollection");
                    }
                });

        final _ListsSoap_GetVersionCollectionResponse responseData = new _ListsSoap_GetVersionCollectionResponse();

        responseData.setGetVersionCollectionResult(_out_getVersionCollectionResult);

        executeSOAPRequest(
            request,
            "GetVersionCollectionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetVersionCollectionResult();
    }

    public String addAttachment(
        final String listName,
        final String listItemID,
        final String fileName,
        final byte[] attachment)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_AddAttachment requestData = new _ListsSoap_AddAttachment(listName, listItemID, fileName,
                attachment);

        final SOAPRequest request = createSOAPRequest(
                "AddAttachment",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddAttachment");
                    }
                });

        final _ListsSoap_AddAttachmentResponse responseData = new _ListsSoap_AddAttachmentResponse();

        executeSOAPRequest(
            request,
            "AddAttachmentResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddAttachmentResult();
    }

    public AnyContentType getAttachmentCollection(
        final String listName,
        final String listItemID,
        final AnyContentType _out_getAttachmentCollectionResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetAttachmentCollection requestData = new _ListsSoap_GetAttachmentCollection(listName,
                listItemID);

        final SOAPRequest request = createSOAPRequest(
                "GetAttachmentCollection",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetAttachmentCollection");
                    }
                });

        final _ListsSoap_GetAttachmentCollectionResponse responseData = new _ListsSoap_GetAttachmentCollectionResponse();

        responseData.setGetAttachmentCollectionResult(_out_getAttachmentCollectionResult);

        executeSOAPRequest(
            request,
            "GetAttachmentCollectionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetAttachmentCollectionResult();
    }

    public void deleteAttachment(
        final String listName,
        final String listItemID,
        final String url)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_DeleteAttachment requestData = new _ListsSoap_DeleteAttachment(listName, listItemID, url);

        final SOAPRequest request = createSOAPRequest(
                "DeleteAttachment",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteAttachment");
                    }
                });

        final _ListsSoap_DeleteAttachmentResponse responseData = new _ListsSoap_DeleteAttachmentResponse();

        executeSOAPRequest(
            request,
            "DeleteAttachmentResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public boolean checkOutFile(
        final String pageUrl,
        final String checkoutToLocal,
        final String lastmodified)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_CheckOutFile requestData = new _ListsSoap_CheckOutFile(pageUrl, checkoutToLocal, lastmodified);

        final SOAPRequest request = createSOAPRequest(
                "CheckOutFile",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "CheckOutFile");
                    }
                });

        final _ListsSoap_CheckOutFileResponse responseData = new _ListsSoap_CheckOutFileResponse();

        executeSOAPRequest(
            request,
            "CheckOutFileResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.isCheckOutFileResult();
    }

    public boolean undoCheckOut(final String pageUrl)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UndoCheckOut requestData = new _ListsSoap_UndoCheckOut(pageUrl);

        final SOAPRequest request = createSOAPRequest(
                "UndoCheckOut",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UndoCheckOut");
                    }
                });

        final _ListsSoap_UndoCheckOutResponse responseData = new _ListsSoap_UndoCheckOutResponse();

        executeSOAPRequest(
            request,
            "UndoCheckOutResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.isUndoCheckOutResult();
    }

    public boolean checkInFile(
        final String pageUrl,
        final String comment,
        final String checkinType)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_CheckInFile requestData = new _ListsSoap_CheckInFile(pageUrl, comment, checkinType);

        final SOAPRequest request = createSOAPRequest(
                "CheckInFile",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "CheckInFile");
                    }
                });

        final _ListsSoap_CheckInFileResponse responseData = new _ListsSoap_CheckInFileResponse();

        executeSOAPRequest(
            request,
            "CheckInFileResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.isCheckInFileResult();
    }

    public AnyContentType getListContentTypes(
        final String listName,
        final String contentTypeId,
        final AnyContentType _out_getListContentTypesResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListContentTypes requestData = new _ListsSoap_GetListContentTypes(listName, contentTypeId);

        final SOAPRequest request = createSOAPRequest(
                "GetListContentTypes",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListContentTypes");
                    }
                });

        final _ListsSoap_GetListContentTypesResponse responseData = new _ListsSoap_GetListContentTypesResponse();

        responseData.setGetListContentTypesResult(_out_getListContentTypesResult);

        executeSOAPRequest(
            request,
            "GetListContentTypesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListContentTypesResult();
    }

    public AnyContentType getListContentTypesAndProperties(
        final String listName,
        final String contentTypeId,
        final String propertyPrefix,
        final boolean includeWebProperties,
        final AnyContentType _out_getListContentTypesAndPropertiesResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListContentTypesAndProperties requestData = new _ListsSoap_GetListContentTypesAndProperties(
                    listName,
                    contentTypeId,
                    propertyPrefix,
                    includeWebProperties);

        final SOAPRequest request = createSOAPRequest(
                "GetListContentTypesAndProperties",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListContentTypesAndProperties");
                    }
                });

        final _ListsSoap_GetListContentTypesAndPropertiesResponse responseData = new _ListsSoap_GetListContentTypesAndPropertiesResponse();

        responseData.setGetListContentTypesAndPropertiesResult(_out_getListContentTypesAndPropertiesResult);

        executeSOAPRequest(
            request,
            "GetListContentTypesAndPropertiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListContentTypesAndPropertiesResult();
    }

    public AnyContentType getListContentType(
        final String listName,
        final String contentTypeId,
        final AnyContentType _out_getListContentTypeResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_GetListContentType requestData = new _ListsSoap_GetListContentType(listName, contentTypeId);

        final SOAPRequest request = createSOAPRequest(
                "GetListContentType",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListContentType");
                    }
                });

        final _ListsSoap_GetListContentTypeResponse responseData = new _ListsSoap_GetListContentTypeResponse();

        responseData.setGetListContentTypeResult(_out_getListContentTypeResult);

        executeSOAPRequest(
            request,
            "GetListContentTypeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListContentTypeResult();
    }

    public String createContentType(
        final String listName,
        final String displayName,
        final String parentType,
        final AnyContentType fields,
        final AnyContentType contentTypeProperties,
        final String addToView)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_CreateContentType requestData = new _ListsSoap_CreateContentType(listName, displayName,
                parentType, fields, contentTypeProperties, addToView);

        final SOAPRequest request = createSOAPRequest(
                "CreateContentType",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "CreateContentType");
                    }
                });

        final _ListsSoap_CreateContentTypeResponse responseData = new _ListsSoap_CreateContentTypeResponse();

        executeSOAPRequest(
            request,
            "CreateContentTypeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getCreateContentTypeResult();
    }

    public AnyContentType updateContentType(
        final String listName,
        final String contentTypeId,
        final AnyContentType contentTypeProperties,
        final AnyContentType newFields,
        final AnyContentType updateFields,
        final AnyContentType deleteFields,
        final String addToView,
        final AnyContentType _out_updateContentTypeResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateContentType requestData = new _ListsSoap_UpdateContentType(listName, contentTypeId,
                contentTypeProperties, newFields, updateFields, deleteFields, addToView);

        final SOAPRequest request = createSOAPRequest(
                "UpdateContentType",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateContentType");
                    }
                });

        final _ListsSoap_UpdateContentTypeResponse responseData = new _ListsSoap_UpdateContentTypeResponse();

        responseData.setUpdateContentTypeResult(_out_updateContentTypeResult);

        executeSOAPRequest(
            request,
            "UpdateContentTypeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateContentTypeResult();
    }

    public AnyContentType deleteContentType(
        final String listName,
        final String contentTypeId,
        final AnyContentType _out_deleteContentTypeResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_DeleteContentType requestData = new _ListsSoap_DeleteContentType(listName, contentTypeId);

        final SOAPRequest request = createSOAPRequest(
                "DeleteContentType",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteContentType");
                    }
                });

        final _ListsSoap_DeleteContentTypeResponse responseData = new _ListsSoap_DeleteContentTypeResponse();

        responseData.setDeleteContentTypeResult(_out_deleteContentTypeResult);

        executeSOAPRequest(
            request,
            "DeleteContentTypeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getDeleteContentTypeResult();
    }

    public AnyContentType updateContentTypeXmlDocument(
        final String listName,
        final String contentTypeId,
        final AnyContentType newDocument,
        final AnyContentType _out_updateContentTypeXmlDocumentResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateContentTypeXmlDocument requestData = new _ListsSoap_UpdateContentTypeXmlDocument(listName,
                contentTypeId,
                newDocument);

        final SOAPRequest request = createSOAPRequest(
                "UpdateContentTypeXmlDocument",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateContentTypeXmlDocument");
                    }
                });

        final _ListsSoap_UpdateContentTypeXmlDocumentResponse responseData = new _ListsSoap_UpdateContentTypeXmlDocumentResponse();

        responseData.setUpdateContentTypeXmlDocumentResult(_out_updateContentTypeXmlDocumentResult);

        executeSOAPRequest(
            request,
            "UpdateContentTypeXmlDocumentResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateContentTypeXmlDocumentResult();
    }

    public AnyContentType updateContentTypesXmlDocument(
        final String listName,
        final AnyContentType newDocument,
        final AnyContentType _out_updateContentTypesXmlDocumentResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_UpdateContentTypesXmlDocument requestData = new _ListsSoap_UpdateContentTypesXmlDocument(listName,
                newDocument);

        final SOAPRequest request = createSOAPRequest(
                "UpdateContentTypesXmlDocument",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateContentTypesXmlDocument");
                    }
                });

        final _ListsSoap_UpdateContentTypesXmlDocumentResponse responseData = new _ListsSoap_UpdateContentTypesXmlDocumentResponse();

        responseData.setUpdateContentTypesXmlDocumentResult(_out_updateContentTypesXmlDocumentResult);

        executeSOAPRequest(
            request,
            "UpdateContentTypesXmlDocumentResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateContentTypesXmlDocumentResult();
    }

    public AnyContentType deleteContentTypeXmlDocument(
        final String listName,
        final String contentTypeId,
        final String documentUri,
        final AnyContentType _out_deleteContentTypeXmlDocumentResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_DeleteContentTypeXmlDocument requestData = new _ListsSoap_DeleteContentTypeXmlDocument(listName,
                contentTypeId,
                documentUri);

        final SOAPRequest request = createSOAPRequest(
                "DeleteContentTypeXmlDocument",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteContentTypeXmlDocument");
                    }
                });

        final _ListsSoap_DeleteContentTypeXmlDocumentResponse responseData = new _ListsSoap_DeleteContentTypeXmlDocumentResponse();

        responseData.setDeleteContentTypeXmlDocumentResult(_out_deleteContentTypeXmlDocumentResult);

        executeSOAPRequest(
            request,
            "DeleteContentTypeXmlDocumentResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getDeleteContentTypeXmlDocumentResult();
    }

    public AnyContentType applyContentTypeToList(
        final String webUrl,
        final String contentTypeId,
        final String listName,
        final AnyContentType _out_applyContentTypeToListResult)
        throws TransportException, SOAPFault
    {
        final _ListsSoap_ApplyContentTypeToList requestData = new _ListsSoap_ApplyContentTypeToList(webUrl,
                contentTypeId, listName);

        final SOAPRequest request = createSOAPRequest(
                "ApplyContentTypeToList",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "ApplyContentTypeToList");
                    }
                });

        final _ListsSoap_ApplyContentTypeToListResponse responseData = new _ListsSoap_ApplyContentTypeToListResponse();

        responseData.setApplyContentTypeToListResult(_out_applyContentTypeToListResult);

        executeSOAPRequest(
            request,
            "ApplyContentTypeToListResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getApplyContentTypeToListResult();
    }
}
